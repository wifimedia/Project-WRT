#!/bin/sh /etc/rc.common
#
# Copyright (C) 2019 pexcn <i@pexcn.me>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=90

USE_PROCD=1
#PROCD_DEBUG=1

append_param() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local default="$4"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" -o -n "$default" ] || return 0
	procd_append_param command "$switch" "${_loctmp:-$default}"
}

append_bool() {
	local section="$1"
	local option="$2"
	local value="$3"
	local default="$4"
	local _loctmp
	config_get_bool _loctmp "$section" "$option" "$default"
	[ "$_loctmp" = 1 ] || return 0
	procd_append_param command "$value"
}

create_chnroute_ipset() {
	local enable
	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	create_ipv4_ipset
	create_ipv6_ipset
}

create_ipv4_ipset() {
	local ipset_name
	config_get ipset_name "$1" "ipset_name_4" "chnroute"

	if ipset list -n $ipset_name &>/dev/null; then
		ipset flush $ipset_name
	else
		ipset create $ipset_name hash:net hashsize 64 family inet
	fi

	# add chnroute
	ipset restore <<- EOF
		$(cat /etc/chinadns-ng/chnroute.txt | sed "s/^/add $ipset_name /")
	EOF
}

create_ipv6_ipset() {
	local ipset_name
	config_get ipset_name "$1" "ipset_name_6" "chnroute6"

	if ipset list -n $ipset_name &>/dev/null; then
		ipset flush $ipset_name
	else
		ipset create $ipset_name hash:net hashsize 64 family inet6
	fi

	# add chnroute6
	ipset restore <<- EOF
		$(cat /etc/chinadns-ng/chnroute6.txt | sed "s/^/add $ipset_name /")
	EOF
}

destroy_chnroute_ipset() {
	# now force destroy
	#local enable
	#config_get_bool enable $1 enable
	#[ "$enable" = 1 ] || return 0

	destroy_ipv4_ipset
	destroy_ipv6_ipset
}

destroy_ipv4_ipset() {
	local ipset_name
	config_get ipset_name "$1" "ipset_name_4" "chnroute"
	ipset flush $ipset_name 2>/dev/null
	ipset destroy $ipset_name 2>/dev/null
}

destroy_ipv6_ipset() {
	local ipset_name
	config_get ipset_name "$1" "ipset_name_6" "chnroute6"
	ipset flush $ipset_name 2>/dev/null
	ipset destroy $ipset_name 2>/dev/null
}

start_chinadns_ng() {
	local enable
	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param nice -5
	procd_set_param limits nofile="65535 65535"
	[ -e /proc/sys/kernel/core_pattern ] && {
		procd_append_param limits core="unlimited"
	}
	procd_set_param command /usr/bin/chinadns-ng
	append_param $1 bind_addr "-b"
	append_param $1 bind_port "-l"
	append_param $1 china_dns "-c"
	append_param $1 trust_dns "-t"
	append_param $1 ipset_name_4 "-4"
	append_param $1 ipset_name_6 "-6"
	append_param $1 timeout_sec "-o"
	local repeat_times_tmp
	config_get repeat_times_tmp "$1" "repeat_times" "1"
	[ $repeat_times_tmp -gt "1" ] && {
		append_param $1 repeat_times "-p"
	}
	append_bool $1 fair_mode "-f"
	append_bool $1 reuse_port "-r"
	append_bool $1 noip_as_chnip "-n"
	procd_close_instance
}

start_service() {
	config_load chinadns-ng
	config_foreach create_chnroute_ipset chinadns-ng
	config_foreach start_chinadns_ng chinadns-ng
}

stop_service() {
	config_load chinadns-ng
	config_foreach destroy_chnroute_ipset chinadns-ng
}
